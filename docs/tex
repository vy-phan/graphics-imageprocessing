    triangle( radius, x ) = max( 0, 1 - | x/radius | )

$$\text{triangle}( \textit{radius}, x ) = \text{max}\left( 0, 1 - \left| \frac{x}{\text{radius}} \right| \right)$$

You will need to normalize this on-the-fly.  
In 2D, the filter is

     f(x,y) = triangle( radius_x, x ) * triangle( radius_y, y )

$$f(x,y ) = \text{triangle}( \text{radius}_x, x ) \cdot \text{triangle}( \text{radius}_y, y )$$

By picking the right right radius for x and y, the scaling function will
eliminate high frequencies that cause aliasing artifacts. The formula
for the radius is:

    if new_size > old_size: radius = 1
    else: radius = old_size/new_size

$$\text{radius} =
\begin{cases}
1 & \text{if} \quad \text{new\_size} > \text{old\_size} \\\\
\frac{ \text{ old\_size } }{ \text{ new\_size } } & \text{otherwise}
\end{cases}$$
